/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sr5CampaignManager.dialogs;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.event.EventListenerList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import sr5CampaignManager.models.MyComboBoxCellRenderer;
import sr5CampaignManager.models.NamedColourComboBoxModel;
import sr5CampaignManager.objects.Map;
import sr5CampaignManager.objects.maps.NamedColour;
import sr5CampaignManager.events.MapChangeEvent;
import sr5CampaignManager.events.MapChangeListener;

/**
 *
 * @author nbp184
 */
public class EditNamedColoursDialog extends javax.swing.JDialog {

    private final Map map;
    private final NamedColourComboBoxModel model;
    private final Color plain;
    private final Color highlight;
    private final EventListenerList listenerList;
    
    /**
     * Creates new form EditNamedColoursDialog
     */
    public EditNamedColoursDialog(java.awt.Frame parent, Map map) {
        super(parent, true);
        initComponents();
        this.map = map;
        
        model = new NamedColourComboBoxModel(map);
        lstColours.setModel(model);
        lstColours.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                lstColoursValueChanged(e);
            }
        });
        lstColours.setCellRenderer(new MyComboBoxCellRenderer(MyComboBoxCellRenderer.NAMED_COLOUR));
        
        plain = pnlColour.getBackground();
        highlight = new Color(255, 255, 204);
        
        listenerList = new EventListenerList();
        
        btnRemove.setVisible(false);
    }
    
    public void showDialog() {
        this.setLocationRelativeTo(getParent());
        this.pack();
        this.setVisible(true);
    }
    
    public void addMapChangeListener(MapChangeListener listener) {
        listenerList.add(MapChangeListener.class, listener);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnOK = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstColours = new javax.swing.JList();
        pnlColour = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        ccColour = new javax.swing.JColorChooser();
        btnAddUpdate = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setTitle("Edit Colours");

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        lstColours.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstColours);

        pnlColour.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Name");

        txtName.setColumns(10);

        btnAddUpdate.setText("Add");
        btnAddUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUpdateActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlColourLayout = new javax.swing.GroupLayout(pnlColour);
        pnlColour.setLayout(pnlColourLayout);
        pnlColourLayout.setHorizontalGroup(
            pnlColourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlColourLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlColourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlColourLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ccColour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlColourLayout.createSequentialGroup()
                        .addComponent(btnAddUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlColourLayout.setVerticalGroup(
            pnlColourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlColourLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlColourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ccColour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlColourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddUpdate)
                    .addComponent(btnRemove)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlColour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOK)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlColour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOK))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUpdateActionPerformed
        if(lstColours.getSelectedValue() != null) {
            NamedColour colour = (NamedColour)lstColours.getSelectedValue();
            colour.name = txtName.getText();
            colour.colour = ccColour.getColor();
            lstColours.repaint();
        } else {
            model.add(new NamedColour(txtName.getText(), ccColour.getColor()));
        }
        fireMapChange();
        lstColours.setSelectedValue(null, true);
    }//GEN-LAST:event_btnAddUpdateActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        if(lstColours.getSelectedValue() != null) {
            if(!map.isUsingColour((NamedColour)lstColours.getSelectedValue())) {
                model.remove(lstColours.getSelectedIndex());
            } else {
                JOptionPane.showMessageDialog(this, "Colour is in use", "Removing", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Must select colour", "Removing", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if(lstColours.getSelectedValue() != null) {
            lstColours.clearSelection();
        } else {
            txtName.setText("");
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnOKActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUpdate;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnRemove;
    private javax.swing.JColorChooser ccColour;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstColours;
    private javax.swing.JPanel pnlColour;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    private void lstColoursValueChanged(ListSelectionEvent listSelectionEvent) {
        Object selectedValue = lstColours.getSelectedValue();
        if(selectedValue == null) {
            btnAddUpdate.setText("Add");
            btnRemove.setVisible(false);
            txtName.setText("");
            pnlColour.setBackground(plain);
            ccColour.setBackground(plain);
        } else {
            NamedColour selected = (NamedColour)selectedValue;
            btnAddUpdate.setText("Update");
            btnRemove.setVisible(true);
            txtName.setText(selected.name);
            ccColour.setColor(selected.colour);
            pnlColour.setBackground(highlight);
            ccColour.setBackground(highlight);
        }
    }
    
    private void fireMapChange() {
        MapChangeListener[] listeners = listenerList.getListeners(MapChangeListener.class);
        for(MapChangeListener listener : listeners) {
            listener.mapChanged(new MapChangeEvent(MapChangeEvent.UPDATE, null));
        }
    }
}
