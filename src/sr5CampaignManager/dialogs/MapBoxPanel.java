/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sr5CampaignManager.dialogs;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import sr5CampaignManager.models.LineWidthComboBoxModel;
import sr5CampaignManager.models.MyComboBoxCellRenderer;
import sr5CampaignManager.models.NamedColourComboBoxModel;
import sr5CampaignManager.objects.Map;
import sr5CampaignManager.objects.maps.MapBox;
import sr5CampaignManager.objects.maps.NamedColour;
import sr5CampaignManager.events.MapChangeEvent;

/**
 *
 * @author nbp184
 */
public class MapBoxPanel extends MapDrawingObjectPanel<MapBox> {

    private MapBox mapBox;
    
    /**
     * Creates new form MapBoxPanel
     */
    public MapBoxPanel(Map map) {
        initComponents();
        mapBox = null;
        
        cbColour.setModel(new NamedColourComboBoxModel(map));
        cbColour.setRenderer(new MyComboBoxCellRenderer(MyComboBoxCellRenderer.NAMED_COLOUR));
        
        cbLineWidth.setModel(new LineWidthComboBoxModel());
        cbLineWidth.setRenderer(new MyComboBoxCellRenderer(MyComboBoxCellRenderer.LINE_WIDTH));
        cbLineWidth.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if(e.getStateChange() == ItemEvent.SELECTED) {
                    cbLineWidthItemSelected();
                }
            }
        });
        
        spnLayer.setModel(new SpinnerNumberModel(0, null, null, 1));
        
        btnRemove.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        cbColour = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        cbLineWidth = new javax.swing.JComboBox();
        cbFilled = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        spnX1 = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        spnY1 = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        spnX2 = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        spnY2 = new javax.swing.JSpinner();
        btnAddUpdate = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        spnLayer = new javax.swing.JSpinner();

        jLabel5.setText("Colour");

        cbColour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Line Width");

        cbLineWidth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbFilled.setText("Filled");

        jLabel1.setText("Top");

        jLabel2.setText("Left");

        jLabel3.setText("Width");

        jLabel4.setText("Height");

        btnAddUpdate.setText("Add");
        btnAddUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUpdateActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel7.setText("Layer");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnY1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnX1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnX2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnY2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbColour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbLineWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbFilled)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnLayer, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbColour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cbLineWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbFilled)
                    .addComponent(jLabel7)
                    .addComponent(spnLayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(spnX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(spnY1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(spnX2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(spnY2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddUpdate)
                    .addComponent(btnRemove)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUpdateActionPerformed
        if(mapBox != null) {
            mapBox.colour = (NamedColour)cbColour.getSelectedItem();
            mapBox.lineWidth = ((LineWidthComboBoxModel)cbLineWidth.getModel()).getValue();
            mapBox.point[0] = (Integer)spnX1.getValue();
            mapBox.point[1] = (Integer)spnY1.getValue();
            mapBox.width = (Integer)spnX2.getValue();
            mapBox.height = (Integer)spnY2.getValue();
            mapBox.filled = cbFilled.isSelected();
            mapBox.layer = (Integer)spnLayer.getValue();
            fireMapChange(new MapChangeEvent(MapChangeEvent.UPDATE, mapBox));
        } else {
            mapBox = new MapBox((Integer)spnX1.getValue(), (Integer)spnY1.getValue(), (Integer)spnX2.getValue(), (Integer)spnY2.getValue(), cbFilled.isSelected());
            mapBox.colour = (NamedColour)cbColour.getSelectedItem();
            mapBox.lineWidth = ((LineWidthComboBoxModel)cbLineWidth.getModel()).getValue();
            mapBox.layer = (Integer)spnLayer.getValue();
            fireMapChange(new MapChangeEvent(MapChangeEvent.ADD, mapBox));
        }
    }//GEN-LAST:event_btnAddUpdateActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        if(mapBox != null) {
            fireMapChange(new MapChangeEvent(MapChangeEvent.REMOVE, mapBox));
        } else {
            JOptionPane.showMessageDialog(this, "Must select box", "Removing", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        fireMapChange(new MapChangeEvent(MapChangeEvent.CANCEL, mapBox));
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUpdate;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRemove;
    private javax.swing.JComboBox cbColour;
    private javax.swing.JCheckBox cbFilled;
    private javax.swing.JComboBox cbLineWidth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSpinner spnLayer;
    private javax.swing.JSpinner spnX1;
    private javax.swing.JSpinner spnX2;
    private javax.swing.JSpinner spnY1;
    private javax.swing.JSpinner spnY2;
    // End of variables declaration//GEN-END:variables

    private void cbLineWidthItemSelected() {
        LineWidthComboBoxModel lwModel = (LineWidthComboBoxModel)cbLineWidth.getModel();
        if(lwModel.isCustomSelected()) {
            NumberSelectorDialog nsd = new NumberSelectorDialog(null, "Custom Line Width..", lwModel.getValue(), false);
            if(nsd.showDialog() == NumberSelectorDialog.OK) {
                lwModel.setValue(nsd.getNumber());
            }
        }
    }
    
    @Override
    public void setObject(MapBox object) {
        mapBox = object;
        btnAddUpdate.setText("Update");
        btnRemove.setVisible(true);
        cbColour.setSelectedItem(mapBox.colour);
        boolean found = false;
        for(int i = 0; i < LineWidthComboBoxModel.values.length; i++) {
            if(mapBox.lineWidth == LineWidthComboBoxModel.values[i]) {
                cbLineWidth.setSelectedIndex(i);
                found = true;
                break;
            }
        }
        if(!found) {
            ((LineWidthComboBoxModel)cbLineWidth.getModel()).setValue(mapBox.lineWidth);
            cbLineWidth.setSelectedIndex(LineWidthComboBoxModel.values.length);
        }
        spnX1.setValue(mapBox.point[0]);
        spnY1.setValue(mapBox.point[1]);
        spnX2.setValue(mapBox.width);
        spnY2.setValue(mapBox.height);
        cbFilled.setSelected(mapBox.filled);
        spnLayer.setValue(mapBox.layer);
        setBackground(highlight);
    }

    @Override
    public void clearData() {
        mapBox = null;
        btnAddUpdate.setText("Add");
        btnRemove.setVisible(false);
        cbColour.setSelectedIndex(0);
        cbLineWidth.setSelectedIndex(LineWidthComboBoxModel.defaultIndex);
        spnX1.setValue(0);
        spnY1.setValue(0);
        spnX2.setValue(0);
        spnY2.setValue(0);
        cbFilled.setSelected(false);
        spnLayer.setValue(0);
        setBackground(plain);
    }

    @Override
    public boolean isOfType(String typeName) {
        return typeName.compareTo("MapBox") == 0;
    }

}
