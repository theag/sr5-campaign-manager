/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sr5CampaignManager.panels;

import sr5CampaignManager.events.RunChangeEvent;
import sr5CampaignManager.events.RunChangeListener;
import sr5CampaignManager.events.OpenPanelListener;
import javax.swing.JOptionPane;
import sr5CampaignManager.objects.NPC;
import sr5CampaignManager.objects.NPCGroup;

/**
 *
 * @author nbp184
 */
public class NPCGroupPanel extends RunEditor {

    private final NPCGroup npcGroup;
    
    /**
     * Creates new form NPCGroupPanel
     * @param npcGroup
     */
    public NPCGroupPanel(NPCGroup npcGroup) {
        initComponents();
        this.npcGroup = npcGroup;
        txtName.setText(npcGroup.name);
        lstNPCs.setListData(npcGroup.npcs.toArray());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstNPCs = new javax.swing.JList();
        btnSave = new javax.swing.JButton();
        btnAddNPC = new javax.swing.JButton();
        btnRemoveNPC = new javax.swing.JButton();

        jLabel1.setText("Name");

        txtName.setColumns(25);

        lstNPCs.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstNPCs.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lstNPCs);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnAddNPC.setText("Add");
        btnAddNPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNPCActionPerformed(evt);
            }
        });

        btnRemoveNPC.setText("Remove");
        btnRemoveNPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveNPCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnSave)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddNPC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveNPC)))
                .addContainerGap(323, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddNPC)
                    .addComponent(btnRemoveNPC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddNPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNPCActionPerformed
        NPC npc = new NPC("No Name");
        npcGroup.npcs.add(npc);
        fireRunChangeEvent(new RunChangeEvent(npc, RunChangeEvent.ADD, npcGroup));
        OpenPanelListener[] listeners = listenerList.getListeners(OpenPanelListener.class);
        for(OpenPanelListener listener : listeners) {
            listener.onOpenPanel(new NPCPanel(npc));
        }
    }//GEN-LAST:event_btnAddNPCActionPerformed

    private void btnRemoveNPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveNPCActionPerformed
        Object value = lstNPCs.getSelectedValue();
        if(value != null) {
            npcGroup.npcs.remove((NPC)value);
            lstNPCs.setListData(npcGroup.npcs.toArray());
            fireRunChangeEvent(new RunChangeEvent((NPC)value, RunChangeEvent.REMOVE, npcGroup));
        } else {
            JOptionPane.showMessageDialog(this, "No NPC selected", "Removing NPC", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveNPCActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        npcGroup.name = txtName.getText();
        fireRunChangeEvent(new RunChangeEvent(npcGroup, RunChangeEvent.NO_ADD_REMOVE));
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNPC;
    private javax.swing.JButton btnRemoveNPC;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstNPCs;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void fireRunChangeEvent(RunChangeEvent evt) {
        RunChangeListener[] listeners = listenerList.getListeners(RunChangeListener.class);
        for(RunChangeListener listener : listeners) {
            listener.onRunChanged(evt);
        }
    }

    @Override
    public String getTitleBar() {
        return "NPC Group: " +npcGroup.name;
    }

    @Override
    public void clickSaveButton() {
        btnSave.doClick();
    }

    @Override
    public void preferenceSave() {
        
    }
}
